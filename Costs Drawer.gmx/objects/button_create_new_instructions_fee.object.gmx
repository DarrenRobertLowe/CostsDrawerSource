<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_create_new_instructions_fee</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 0;

startX = x;
startY = y;

shown = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// position and scale
shown = true;

x = (view_xview[0] + startX);
y = (view_yview[0] + startY);

var scale = global.GUI_SCALE;

scaleX = 0;
if ( scale == 1.5 ) then scaleX = 130;
x = (view_xview[0] + startX + scaleX);


/// HIDE if window width is to narrow
checkValue  = ceil((x -view_xview[0]) + sprite_width);
rcValue     = floor(window_get_width() - global.right_column_width)+ 17;

if ( checkValue &gt; rcValue)
then shown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW self, mouseOver event;

if (shown = true)
{
    draw_self_round();
    scale = global.GUI_SCALE;
    
    //if (mouseOverArea(startX+scaleX,startY,startX+scaleX+30,startY+30))
    if (mouseOverArea(x,y,x+30,y+30))
    {
        tooltip("Create / Insert New Instructions Fee Item");
    }
    
    if  (global.MOUSE_FREE = true)
    and (global.menuSelected == 0)
    and ((view_yview[0]+view_hview[0]) &gt; (GENERAL_INSTRUCTIONS_FEE.y) ) // enable only when over last page items
    {
        if ( scale == 1.5 )
          then sprite_index = spr_create_new_instructions_fee_150;
          else sprite_index = spr_create_new_instructions_fee;
        
        // CREATE AT SELECTED POSITION
        //if  ( global.selected &gt; -1 )
        //and exists(global.selected)
        {
            
                //if ( mouseOverArea(startX,startY,startX+30,startY+30) )
                var xv = x-view_xview[0];
                var yv = y-view_yview[0];
                
                if (mouseOverArea(xv,yv,xv+30,yv+30))
                {
                    highlightButton();
                    //tooltip("Create / Insert New Instructions Fee Item");
                    
                    // MOUSE CLICK
                    if ( mouse_check_button_pressed(mb_left) )
                    {
                        //var pos = ds_list_find_index(global.listOfItems, global.selected)
                        var newItem = insert_INSTRUCTIONS_DETAILS();//insert_item(USER_ITEM, pos+1);
                        
                        // Finish up
                        if (newItem &gt; -1)
                        {
                            global.selected = newItem;
                            newItem.selectedField = "description";
                            view_jump_to_row(newItem.row);
                        }
                        
                        COMMON_ITEMS_CHECKER.alarm[0] = 2
                        DOC_ORGANIZER.alarm[0] = 2;
                    }
                }
        }
        
        // ELSE CREATE AT END OF LIST (before BUTTON_CreateNewItem)
        /*
        if (global.selected == -1)
         or  ( (global.selected.object_index != USER_ITEM)
         and (global.selected.object_index != item_caseDetails) )
        {
            if (mouseOverArea(startX,startY,startX+30,startY+30))
            {
                highlightButton();
                
                // MOUSE CLICK
                if (mouse_check_button_pressed(mb_left))
                {
                    var pos = ds_list_find_index(global.listOfItems, BUTTON_CreateNewItem.id)
                    
                    if (pos &gt; -1) then insert_item(USER_ITEM, pos);
                }
            }
        }
        */
    }
    else
    {
        if ( scale == 1.5 )
              then sprite_index = spr_create_new_instructions_fee_gray_150;
              else sprite_index = spr_create_new_instructions_fee_gray;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
