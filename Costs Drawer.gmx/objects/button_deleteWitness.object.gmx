<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gray_x</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>PARENT_rightColumnButton</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
hidden = true;
// start the step event

alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if we should exist...
if (ds_list_find_value(global.WITNESSES,myNumber-1) != myValue)
or (room == OPENING_SCREEN)
then instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check if we should be shown...

var minNum = (global.currentWitnessNumber +1);
var maxNum = minNum;

if exists(witnesses_SCROLLBAR)
{
    maxNum = (global.currentWitnessNumber + witnesses_SCROLLBAR.maxShown);
}

if exists(witnesses_SCROLLBAR_H)
{
    if (witnesses_SCROLLBAR_H.scrollbarShown == true)
      then maxNum--;
}
 
if  (myNumber &gt;=  minNum)
and (myNumber &lt;= maxNum)
{
    hidden = false;
}
else hidden = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// find x and y positions and width
x = (global.rightColumnWindowsX2 - scrollbarWidth - sprite_width - 5);

currentItem = global.currentWitnessNumber;


separation = global.rightColumnItemsSeparation;
if (global.GUI_SCALE == 1.5) then separation = (global.rightColumnItemsSeparation * 1.5);

var add = (myNumber - (currentItem)) * separation;
y = (global.witnessesWindowY1 + add);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// reset alarm[0]

alarm[0] = (room_speed/4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// mouse click events

if (hidden == false)
{
    /* Functionality */
    if mouseOverSprite()                                                    // if the mouse is over this button
    {
        highlightButton();
        
        if mouse_check_button_pressed(mb_left)                              // if the user is pressing this button
        {
            var item = ds_list_find_value(global.WITNESSES,myNumber-1);
            var name = item.name
            
            if show_question("Are you sure you wish to delete Witness  "+ string(name)+"?  This action cannot be undone!")
            {
                ds_list_delete(global.WITNESSES,myNumber-1);
                
                event_perform_object(witnesses_SCROLLBAR,ev_mouse,ev_mouse_wheel_up)
                
                // remove witness
                var pos = ds_list_find_index(global.listOfItems,myValue);

                if  (pos &gt; -1) then ds_list_delete(global.listOfItems,pos);
                
                // update all delete items to have correct number
                with button_deleteWitness
                {
                    if (other.myNumber &lt; myNumber)
                    then myNumber--;
                }
                
                with button_editWitness
                {
                    if (other.myNumber &lt; myNumber)
                    then myNumber--;
                }
            }
        }
    }
    
    
    /* Change the SPRITE */
    if mouseOverSprite() {
        if mouse_check_button(mb_left) {
            image_index = 2;
        }
        else image_index = 1;
    }
    else image_index = 0;
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw_self();
if (global.GUI_SCALE == 1.5)
  then sprite_index = spr_gray_x_150;
  else sprite_index = spr_gray_x;

if (hidden == false) then draw_self_round();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Event needed to hide sprite from room
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
