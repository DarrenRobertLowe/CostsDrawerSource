<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>descriptionList = ds_list_create();
description     = "";
active          = false;
lineHeight      = 20;
hoverTime       = 0;
targetID        = -1;
previousTooltipsString = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update Description
/* Note: see common_item_tooltips();
*/

ds_list_clear(descriptionList);

/*
if (target = "Save")
{
    ds_list_add(descriptionList,  "Save");
}

if (target = "Open")
{
    ds_list_add(descriptionList,  "Open...");
}

if (target = "New")
{
    ds_list_add(descriptionList,  "New...");
}

if (target = "Print")
{
    ds_list_add(descriptionList,  "Print");
}

if (target = "Export as XLSX")
{
    ds_list_add(descriptionList,  "Export as XLSX");
}

if (target = "Zoom in")
{
    ds_list_add(descriptionList,  "Zoom in");
}

if (target = "Zoom out")
{
    ds_list_add(descriptionList,  "Zoom out");
}

if (target = "Move item up")
{
    ds_list_add(descriptionList,  "Move selected item up the list (select item via row column first)")
}

if (target = "Move item down")
{
    ds_list_add(descriptionList,  "Move selected item down the list (select item via row column first)")
}

if (target = "Create New Blank Item")
{
    ds_list_add(descriptionList,  "Move selected item down the list (select item via row column first)")
}

if (target = "Create Instructions Fee Item")
{
    ds_list_add(descriptionList,  "Move selected item down the list (select item via row column first)")
}


if (target = "Insert item above")
{
    ds_list_add(descriptionList,  "Insert blank item above currently selected item")
}

if (target = "Insert item below")
{
    ds_list_add(descriptionList,  "Insert blank item below currently selected item")
}








if (target = "Delete item")
{
    ds_list_add(descriptionList,  "Delete item");
}

if (target = "Year")
{
    ds_list_add(descriptionList,  "Year");
}

if (target = "Month")
{
    ds_list_add(descriptionList,  "Month");
}

if (target = "Day")
{
    ds_list_add(descriptionList,  "Day");
}

if (target = "Toggle Item Number")
{
    ds_list_add(descriptionList,  "Toggle Item Number");
}

if (target = "Description")
{
    ds_list_add(descriptionList,  "Description");
}

if (target = "Outlay")
{
    ds_list_add(descriptionList,  "Outlay");
}

if (target = "Professional")
{
    ds_list_add(descriptionList,  "Professional");
}




if (target = "MULTI - Personal Injury Summons (12)")
{
    ds_list_add(descriptionList,  "Creates 12 Items...");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "1) Instructions for Personal Injury");
    ds_list_add(descriptionList,  "   Summons");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "2) Fee on preparation of Personal Injury");
    ds_list_add(descriptionList,  "   Summons");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "3) Attending to file");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "4) Copy for service");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "5) Attending junior counsel to settle");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "6) Paid junior counsel fee settling");
    ds_list_add(descriptionList,  "   Personal Injury Summons");
    ds_list_add(descriptionList,  "7) VAT @ 23%");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "8) Stamp on Plenary Summons");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "9) Service of the Summons on the Defendant");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "10) Affidavit of Verification");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "11) Stamp Thereon");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "12) Commissioners Fee");
}



if (target = "MULTI - Advice on Proofs (6)")
{
    ds_list_add(descriptionList,  "Creates 6 Items...");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "1) Instructions for case to counsel");
    ds_list_add(descriptionList,  "   to advise proofs");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "2) Fee on Case for Proofs");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "3) Attending senior counsel therewith");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "4) Paid Senior Counsel fee on");
    ds_list_add(descriptionList,  "   advice on proofs");
    ds_list_add(descriptionList,  "5) VAT @ 23%");
    ds_list_add(descriptionList,  "");
    ds_list_add(descriptionList,  "6) Notation Of Advice On Proofs...");
}













*/

// reset
target = 0;
active = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Tooltip
//if (exists(global.selected))
//{
    if (active)
    {
        // exit if editing an item...
        if exists(global.selected) and ( object_is_ancestor(global.selected.object_index, ITEM) )
        {
            if  (global.selected.selectedField != "")
            and (global.selected.selectedField != "none")       // then we're editing an item
            then exit;                                          // so exit
        }
        
        
        // otherwise...
        if (global.TIMER &gt; hoverTime)
        {
            // SETUP
            guix = window_mouse_get_x();                        // takes the x position from the gui layer and translates it to mouse_x
            guiy = window_mouse_get_y();                        // takes the y position from the gui layer and translates it to mouse_y
            
            draw_set_font(font_GUI);
            if (global.GUI_SCALE == 1.5) then draw_set_font(font_GUI_large);
            
            draw_set_valign(fa_top);
            draw_set_color(global.tooltipsTextColor);
            
            
            /* NOTE: the reason we used a list was to allow for paragraphs
             * in the text, which was used for marcro items. Macro items
             * are of course not used anymore, but this feature doesn't do
             * any harm, so I've left it in. Of course, it would probably
             * be easier to use multiline text and just add "##" where we
             * want a gap in the text.
            */
            var list = descriptionList;
            var size = ds_list_size(list);
            if (size == 0) then exit;                           // no tooltip so exit
            
            var wHeight     = window_get_height();
            var wWidth      = window_get_width();
            var guiy        = window_mouse_get_y();                    // takes the y position from the gui layer and translates it to mouse_y
            var width       = 0;
            var maxWidth    = (wHeight/3);
            var separation  = (global.defaultRowHeight * global.GUI_SCALE);
            var line        = "";
            
            // GET THE WIDTH OF THE BACKGROUND AREA
            for (var i=0; i&lt;size; i++)
            {
                line = ds_list_find_value(list, i);
                
                //width = max(width, string_width(line));
                width = min(string_width(line), maxWidth);
            }
            
            var x1 = ( window_mouse_get_x() - width );          // takes the x position from the gui layer and translates it to mouse_x
            
            var x2 = (x1 + width);
            var y1 = guiy;
            var height = string_height_ext(line, separation, width)    //(size * lineHeight);
            var y2 = (y1 + height);
            
            
            
            
            // ADJUST TO KEEP TOOLTIP FULLY ON SCREEN
            if (x1 &lt; 10)
            {
                x1 = (mouse_x + 15);//(window_mouse_get_x() + 15);
                x2 = (x1 + width);
            }
            else if (x2 &gt; wWidth)
            {
                var diff = (x2 - wWidth);
                x2 -= diff;
                x1 -= diff;
            }
            
            
            if (y1 &lt; 5)
            {
                var diff = y1;
                y1 += (diff);
                y2 -= (diff);
            }
            else if ( y2 &gt; wHeight)
            {
                var diff = ( (y2 - wHeight));
                y2 -= diff;
                y1 -= diff;
            }
            
            
                // DRAW THE BACKGROUND
                draw_set_color(global.tooltipsBackgroundColor);     // background
                draw_rectangle(x1-5, y1-5, x2+5, y2+5, false);
                
                draw_set_color(global.tooltipsTextColor);           // border
                draw_rectangle(x1-5, y1-5, x2+5, y2+5, true);
                
                
                // DRAW THE ITEMS
                for (var i=0; i&lt;size; i++)
                {
                    var line = ds_list_find_value(list,i);
                    //draw_text(x1, y1 + (i * lineHeight), line);
                    draw_text_ext(x1, y1 + (i * lineHeight), line, separation, width);
                }
        }
    }
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
