<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CONSTANT_ITEM</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
hasDate             = 0;
hasOutlay           = false;
hasProfessional     = false;
countMyItemNumber   = false;
canToggleItemNumber = false;
countMyItemNumber   = 0;
lines               = 2;
moveable            = false;


buttonRepeatTimer   = (global.buttonTimerDelay * room_speed);
editing             = false;
tempLine            = "";

line1 = "              COSTS";
if global.BILL_ON_BEHALF_OF = "Plaintiff" then line2 = "       OF PLAINTIFF";
if global.BILL_ON_BEHALF_OF = "Defendant" then line2 = "       OF DEFENDANT";

defaultLine3 = "e.g. pursuant to Order dated the";
defaultLine4 = "e.g. 2nd of January 2018";

line3 = defaultLine3;
line4 = defaultLine4;

row   = 30;
minimumRow = 25;

// create the Plaintiff / Defendant switch
var button = instance_create(x,y,button_plaintiff_defendant_switch);
button.row = row;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>row = (firstPage_Defendants.row + 2);

if (row &lt; minimumRow)
then row = minimumRow;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// allow switching between Plaintiff and Defendant
if global.BILL_ON_BEHALF_OF = "Plaintiff" then line2 = "       OF PLAINTIFF";
if global.BILL_ON_BEHALF_OF = "Defendant" then line2 = "       OF DEFENDANT";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (in_view())
{
    // Setup
    reset_text();
    
    textPosX = global.textMargin + global.descriptionColumnX;   // x,
    textPosY = getYFromRow(row+1);                              // +1 because text is drawn from bottom up and getYFromRow returns row -1. Don't know why, but it seems to be needed.
    
    line3PosY = getYFromRow(row+3);
    line4PosY = getYFromRow(row+4);
    
    
        draw_set_font_scaled(font_Times);
        draw_text
        (
             global.textMargin + global.descriptionColumnX,     // x,
             textPosY,                                          // y,
             line1
        )
        
        
        // OF PLAINTIFF / OF DEFENDANT
        draw_text
        (
             (global.textMargin + global.descriptionColumnX),     // x,
             (textPosY+(global.rowHeight)),                       // y,
             line2
        )
        
        // DRAW TEXT LINE 3
        if (global.selected != id) or (selectedField != "costsPursuantLine3")
        {
            draw_set_color(global.itemTextColor);
            
            if (line3 == defaultLine3)
            {
                draw_set_color(global.grayText);
                
                if (global.PRINT_VIEW == false) then draw_text(textPosX, line3PosY, line3);
            }
            else draw_text(textPosX, line3PosY, line3);
        }
        
        // DRAW TEXT LINE 4
        if (global.selected != id) or (selectedField != "costsPursuantLine4")
        {
            draw_set_color(global.itemTextColor);
            
            if (line4 == defaultLine4)
            {
                draw_set_color(global.grayText);
                if (global.PRINT_VIEW == false) then draw_text(textPosX, line4PosY, line4);
            }
            else draw_text(textPosX, line4PosY, line4);
        }
        
        
        // MOUSE OVER CHECKS
        if !(mouseOverDocument()) then exit;
        
        /// check for mouseOver()
        if mouseOverCostsPursuant(1) // LINE 3
        {
            drawBorder("costsPursuantLine3");
            
            // LEFT CLICK
            if mouse_check_button_released(mb_left)
            {
                global.selected = id;
                selectedField   = "costsPursuantLine3";
                keyboard_CURSOR.field = 0;
                tempLine        = line3;
                previousline3   = line3;
                cursorPosition  = string_length(tempLine)+1;
                editing = true;
           }
        }
        
        if mouseOverCostsPursuant(2) // LINE 4
        {
            drawBorder("costsPursuantLine4");
            
            // LEFT CLICK
            if mouse_check_button_released(mb_left)
            {
                global.selected = id;
                selectedField   = "costsPursuantLine4";
                keyboard_CURSOR.field = 0;
                previousline4   = line4;
                tempLine        = line4;
                cursorPosition  = string_length(tempLine)+1;
                editing = true;
           }
        }
    
    
        
    
    /// EDITING...
    if (global.selected = id)
    {
        if (editing == true)
        {
            drawBorder(string(selectedField));
            draw_set_alpha(1);
            
            // draw the text so far...
                if (selectedField = "costsPursuantLine3")
                {
                    draw_set_color(global.itemTextColor);
                    draw_text
                    (
                        textPosX,
                        line3PosY,
                        tempLine
                    );
                }
                else
                {
                    draw_set_color(global.grayText);
                    draw_text
                    (
                        textPosX,
                        line3PosY,
                        line3
                    );
                }
                
                
                if (selectedField = "costsPursuantLine4")
                {
                    draw_set_color(global.itemTextColor);
                    draw_text
                    (
                        textPosX,
                        line4PosY,
                        tempLine
                    );
                }
                else
                {
                    draw_set_color(global.grayText);
                    draw_text
                    (
                        textPosX,
                        line4PosY,
                        line4
                    );
                }
            
                
            
            /// WHERE THE MAGIC HAPPENS...
            var yy = textPosY;
            if (selectedField = "costsPursuantLine3") then yy = line3PosY;
            if (selectedField = "costsPursuantLine4") then yy = line4PosY;
            tempLine = user_text_input(tempLine,textPosX,yy,false);
            
            
            // CANCEL AND STOP EDITING //
             if keyboard_check_released(vk_escape)
             {
                if (selectedField = "costsPursuantLine3") then line3 = previousline3;
                if (selectedField = "costsPursuantLine4") then line4 = previousline4;
                 
                editing = false;
                global.SHOW_WARNINGS = true;
                global.selected = -1;
                exit;
             }
            
             
            // CONFIRM AND STOP EDITING //
            if keyboard_check_released(vk_enter)
            or mouseClickOutsideArea(global.descriptionColumnX,borderStartY,global.outlayColumnX,borderEndY + global.rowHeight)
            {
                if (selectedField = "costsPursuantLine3") then line3 = tempLine;
                if (selectedField = "costsPursuantLine4") then line4 = tempLine;
    
                if (line3 = "") then line3 = defaultLine3;
                if (line4 = "") then line4 = defaultLine4;
                
                editing = false;
                global.SHOW_WARNINGS = true;
                global.selected = -1;
                selectedField = "none";
                set_unsaved();
                exit;
            }
        }
    }               
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
