<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>PARENT_rightColumn_createButtons</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
myString    = "Add New Witness";

// start the step event
alarm[0] = 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// find the x and y (inherited)
event_inherited();
y = (global.witnessesWindowY1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// reset alarm[0]

alarm[0] = (room_speed/updateInterval);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// mouse click events

// find x and y
x1 = (global.rightColumnWindowsX1 + view_xview[0]);
y1 = (global.witnessesWindowY1    + view_yview[0]);
x2 = (global.rightColumnWindowsX2 + view_xview[0]);
y2 = (global.witnessesWindowY1 + height + view_yview[0]);



event_inherited();

/* Functionality */
if (toggle == 1)
{
    draw_set_color(global.highlightColor);
    draw_set_alpha(global.highlightAlpha);
    draw_rectangle(x1+view_xview[0], y1+view_yview[0], x2+view_xview[0], y2+view_yview[0], 0);
    
    if (mouse_check_button_pressed(mb_left))         // if the user is pressing this button
    {
        global.selected = -1;
        
        var name = get_string("Enter Witness Name:","")
        if (name != "")
        {
            //item = create_item(WITNESS,lastPage_WITNESSES.row);//var item = instance_create(0,0,WITNESS);
            //ds_list_add(global.WITNESSES,item);
            //item.name = name;
            
            var item = instance_create(0,0,WITNESS);
            ds_list_add(global.WITNESSES,item);
            item.name = name;
            item.masterID = lastPage_WITNESSES.id;
            
            view_jump_to_row(item.row);
            
            var delbtn = instance_create(x,y,button_deleteWitness);
            delbtn.myNumber = ds_list_size(global.WITNESSES);
            delbtn.myValue  = item;
            
            var edtbtn = instance_create(x,y,button_editWitness);
            edtbtn.myNumber = ds_list_size(global.WITNESSES);
            edtbtn.myValue  = item;
            
            set_unsaved();
            
            witnesses_SCROLLBAR_H.alarm[0] = 1;
            //DOC_ORGANIZER.alarm[0] = 10;
        }
    }
}


// check if hovering without performing other actions like dragging a scrollbar, etc...
//if mouseOverArea(global.rightColumnWindowsX1+32,global.witnessesWindowY1,global.rightColumnWindowsX2-32,global.witnessesWindowY1+height)
height = global.rightColumnItemsSeparation;
if (global.GUI_SCALE == 1.5) then height = global.rightColumnItemsSeparation+7;

if mouseOverArea(x,global.witnessesWindowY1,x+width,global.witnessesWindowY1+height)    
and (mouse_is_free() = true)
{
    toggle = 1;
}
else toggle = 0;


reset_text();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
