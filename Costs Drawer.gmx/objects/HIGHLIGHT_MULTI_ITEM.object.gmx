<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active      = false;
startItem   = -1;
endItem     = -1;
targetTime  = 0;
alpha       = 0;
maxAlpha    = 0.5;
displayTime = 5000; // in milliseconds
color       = c_yellow;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active)
{
    if  (startItem &gt; -1)
    and (endItem &gt; -1)
    {
        if (targetTime == 0)
        {
            targetTime = ((get_timer()/1000) + displayTime)
        }
        
        
        if (global.TIMER &lt; targetTime)
        {
            alpha = (maxAlpha - ( (maxAlpha) / (targetTime - global.TIMER)*1000));
            
            
            xx1 = global.rowNumberX;
            xx2 = global.hColumnX;
            yy1 = getYFromRow(startItem.row);
            yy2 = ( getYFromRow(endItem.row + endItem.lines) );
            
            draw_set_alpha(alpha);
            draw_set_color(color);
            draw_rectangle(xx1,yy1,xx2,yy2,false);
        }
        else
        {
            active = 0;
            targetTime = 0;        
            alpha = maxAlpha;
        }
        
    }
}
else
{
    targetTime = 0;
    alpha = maxAlpha;
}

reset_text();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
