<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CONSTANT_ITEM</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/********************
All Item objects should work the same way so that
exporting to CSV can be done without deciphering
object types first. Therefore, we should always
inherit the create event so that every item has
a list for description lines, etc.
*********************/

event_inherited();

/********************/
myID = -2;
countMyItemNumber   = true;
hasDate             = false;
description         = "General Instructions Fee,"
shownDescription    = description;
hasDescription      = false;
hasOutlay           = false;
hasProfessional     = false;
outlay              = 0;
professional        = 0;


formatDescription(descriptionList,description,false);
formatDescription(shownDescriptionList,shownDescription,false);


descriptionList2 = ds_list_create();

ds_list_add(global.LAST_PAGE_ITEMS,id);

lines = 1;

row = 0;







if (global.fileToOpen == "")
{
    //instance_create(0,0,GENERAL_INSTRUCTIONS_DETAILS);
    TOTAL = instance_create(0,0,INSTRUCTIONS_FEE_TOTAL);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW THE DATA
reset_text();

if (global.PRINT_VIEW == true)
 then draw_set_color(global.itemTextColor);
 else draw_set_color(global.grayText);

textPosX = global.descriptionColumnX;
textPosY = getYFromRow(row+1);



    lines = (ds_list_size(descriptionList)+1);
    
    // DRAW Description
    draw_text(                                              // draw_text(...
        global.textMargin + global.descriptionColumnX,      // x,
        textPosY,//+ (i*global.rowHeight),                    // y,
        shownDescription //line                                                // see create event for text
        );
    
    // DRAW totalProfessional
    reset_text();
    draw_set_halign(fa_right);
    
    draw_text(
        global.hColumnX,                                        // must be global to position properly with global.scale
        textPosY,                                               // y position
        formatQuantum(professional)                             // total Professional amount
        );


lines = 1;

mouseOverChecks();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
