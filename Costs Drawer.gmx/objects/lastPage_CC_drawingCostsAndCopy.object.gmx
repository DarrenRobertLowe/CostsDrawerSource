<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CONSTANT_ITEM</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

hasDate             = true;
hasYear             = true;
hasMonth            = true;
hasDay              = true;
requiresYear        = true;
requiresMonth       = true;
requiresDay         = true;
hasDescription      = true;
hasOutlay           = false;
hasProfessional     = true;
instructionsFee     = false;
countMyItemNumber   = true;
canToggleItemNumber = false;
seeFeeLater         = false;

// run the create event
alarm[0] = 1;

professional = global.CC_drawingCostsAndCopy;
professionalText = formatQuantum(professional);


shownDescription = "Drawing costs and copy";
description = shownDescription;
formatDescription(descriptionList,description,0);               // Takes a string and converts it to a list of strings
formatDescription(shownDescriptionList,shownDescription,0);     // Takes a string and converts it to a list of strings


updateLines(shownDescriptionList);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create event
// set target item to position ourselves after (reverse preference)

    targetItem = INSTRUCTIONS_FEE_TOTAL;
    if instance_exists(lastPage_postageAndSundries)  then targetItem = lastPage_postageAndSundries;
    if instance_exists(lastPage_drawingCostsAndCopy) then targetItem = lastPage_drawingCostsAndCopy;
    if instance_exists(lastPage_summonsToTax)        then targetItem = lastPage_summonsToTax;
    if instance_exists(lastPage_stampThereon)        then targetItem = lastPage_stampThereon;
    
var list = global.LAST_PAGE_ITEMS;
var size = ds_list_size(global.LAST_PAGE_ITEMS);

for(var i=0; i&lt;size; i++)
{
    var item = ds_list_find_value(list,i);
     
    if (item.object_index == targetItem)
    {
        row = (item.row + item.lines);
        ds_list_insert(list,i+1,id);
        i = size;
    }
}

//DOC_ORGANIZER.alarm[0] = 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
