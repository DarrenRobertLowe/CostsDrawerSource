<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.tipsList         = ds_list_create();
global.currentTip       = 0;
width = 720;
load_tips();


tipsH = 664;
global.tipsScreenHeight = tipsH;

instance_create(480,637,button_previous_tip);
instance_create(630,637,button_next_tip);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_exists(global.tipsList,ds_type_list) then ds_list_destroy(global.tipsList);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// resize the window

if instance_exists(OPENING_SCREEN_MASTER)
{
    
    //defaultH = global.defaultOpeningScreenHeight;
    
    //if (global.DISPLAY_TIPS == true)
    //{
        window_set_min_height(tipsH);
        window_set_max_height(tipsH);
        window_set_size(748,tipsH);
        w = max(window_get_width(),1);      // prevents crash when minimizing window, by width being minimum of 1
        h = max(window_get_height(),1);     // prevents crash when minimizing window, by hieght being minimum of 1
        display_set_gui_size(w,h);          // resize the gui layer to our window size
        surface_resize(application_surface,w,h);
        room_height = h;
    //}
    /*
    else
    {
        window_set_min_height(defaultH);
        window_set_max_height(defaultH);
        window_set_size(748,defaultH);
        display_set_gui_size(window_get_width(),window_get_height());    // resize the gui layer to our window size
        surface_resize(application_surface,window_get_width(),window_get_height());
        room_height = window_get_height();
    }
    */
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the tip
//if  (global.DISPLAY_TIPS == true)
if ( instance_exists(OPENING_SCREEN_MASTER) )
{
    var x1 = 5;
    var y1 = 524;
    var x2 = 740;
    var y2 = 624;
    
    draw_set_color(c_white);
    draw_rectangle(x1, y1, x2, y2, false);
    draw_set_color(c_ltgray);
    draw_rectangle(x1, y1, x2, y2, true);
    
    var tip = ds_list_find_value(global.tipsList, global.currentTip)
    
    draw_set_valign(fa_top);
    draw_set_color(c_dkgray);
    draw_set_font(font_GUI_large);
    
    if !( is_undefined(tip) )
    {
        draw_text_ext(12, 524, tip, 23, width);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
