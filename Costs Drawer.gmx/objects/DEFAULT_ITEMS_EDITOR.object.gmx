<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// setup positions and spawn buttons
rowHeight = global.rowHeight;
windowX1 = 10;
windowX2 = 740;
windowY1 = 10;
windowY2 = (windowY1 + (rowHeight*30));
footerHeight    = 50;
footerY1        = windowY2;
footerY2        = (windowY2 + footerHeight);
quantumColumnWidth  = 120;


defaultValueColumnX     = (windowX2 - quantumColumnWidth);
newValueColumnX         = (defaultValueColumnX - quantumColumnWidth);
descriptionColumnWidth  = (newValueColumnX - windowX1);

margin = 5;
defaultValueTextX       = ((defaultValueColumnX + quantumColumnWidth) - margin);
newValueTextX           = ((newValueColumnX     + quantumColumnWidth) - margin);
descriptionTextX        = (windowX1 + margin);
descriptionTextWidth    = ((newValueColumnX - descriptionTextX) - margin);

headerY                 = (windowY1 + rowHeight);        // the headers
outlayProfessionalY     = (headerY + (rowHeight*1));     // where the "Outlay Prof." header text goes
listStartY              = (headerY + (rowHeight*1));     // where the items start

customHeaderY           = (windowY1 + rowHeight*16);     // the headers
customListStartY        = (customHeaderY + rowHeight);   // where the custom items start
headerDescriptionX      = (newValueColumnX / 2);
headerNewValueX         = (newValueColumnX + ((defaultValueColumnX-newValueColumnX)/2));
headerDefaultValueX     = (defaultValueColumnX + ((windowX2-defaultValueColumnX)/2));

/// arrays
arrayOfHighCourtItemValues       = global.arrayOfHighCourtItemValues;
arrayOfHighCourtCustomItemValues = global.arrayOfHighCourtCustomItemValues;


// buttons
var footerButtonsY = ((footerY1 + (footerY2 - footerY1) /2) -12);
confirmButton   = instance_create(headerNewValueX-40, footerButtonsY, button_DEFAULT_ITEMS_EDIT_confirm);
cancelButton    = instance_create(headerDefaultValueX-40, footerButtonsY, button_DEFAULT_ITEMS_EDIT_cancel);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// reset variables, and destroy buttons

// destroy buttons
if instance_exists(confirmButton)
 then instance_destroy(confirmButton);
 
if instance_exists(cancelButton)
 then instance_destroy(cancelButton);
 
// reset variables
global.menuSelected = 0;
global.popup        = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw and stuff
draw_set_font(font_GUI);

global.menuSelected = id;
global.popup        = id;
var y1 = windowY1;
var y2 = windowY2;


// draw the white background
draw_set_color(c_white);
draw_rectangle(windowX1, y1, windowX2, y2, false);

// draw the popup border
draw_set_color(c_dkgray);
draw_rectangle(windowX1-1, y1, windowX2, y2, true);



// draw header and footer background rectangles
// background
draw_set_color(c_ltgray);
draw_rectangle(windowX1, y1,                        windowX2, headerY,       false);
draw_rectangle(windowX1, (customHeaderY-rowHeight), windowX2, customHeaderY, false);
draw_rectangle(windowX1, footerY1, windowX2, footerY2, false);
// border
draw_set_color(c_dkgray);
draw_rectangle((windowX1 - 1), (y1-1),                        (windowX2),   (headerY),          true);
draw_rectangle((windowX1 - 1), (customHeaderY-(rowHeight+1)), (windowX2),   (customHeaderY),    true);
draw_rectangle((windowX1 - 1), footerY1, (windowX2),   footerY2,    true);

// draw columns
draw_set_color(c_dkgray);
draw_line(newValueColumnX,      y1,   newValueColumnX,        y2);
draw_line(defaultValueColumnX,  y1,   defaultValueColumnX,    y2);




// draw headers
draw_set_valign(fa_bottom);
draw_set_halign(fa_center);
draw_set_color(c_black);
draw_text(headerDescriptionX,   headerY, "Default Item Description");
draw_text(headerNewValueX,      headerY, "New Value");
draw_text(headerDefaultValueX,  headerY, "Default Value");
// draw row under headers
//draw_line(windowX1, headerY, windowX2, headerY);


// custom items header
draw_text(headerDescriptionX,   customHeaderY, "Custom Made Items");
draw_text(headerNewValueX,      customHeaderY, "Outlay");
draw_text(headerDefaultValueX,  customHeaderY, "Professional");


// DRAW ITEMS CONTENT
/* TO DO:
 * We'll want to be able to scroll through the list.
 * Scrolling will simply change the starting i value and
 * all will work after that.
 * We'll need a scrollbar and scroll buttons.
 *
 * We want descriptions to either display in multiline,
 * or, much easier, we trim the description if it's longer
 * than the descriptionTextWidth.
 *
 * We want to make sure nothing below the window is
 * clickable. This will be useful for any other popup 
 * windows like this one in the future, such as a
 * preferences window.
 * 
 */
var array   = arrayOfHighCourtItemValues;
var size    = array_height_2d(array);
var maxItem = min(size, 15); // 15 being the amount we can show on screen at once.

for (var i=0; i&lt;maxItem; i++)
{
    var yy          = (listStartY + (i*rowHeight));
    var desc        = array[i,0];
    var defaultVal  = array[i,1];
    var newVal      = array[i,2];
    
    draw_set_halign(fa_left);
    draw_text(descriptionTextX,  yy, desc);
    draw_set_halign(fa_right);
    draw_text(newValueTextX,     yy, newVal);
    draw_text(defaultValueTextX, yy, defaultVal);
    
    // draw row 
    draw_line(windowX1, yy, windowX2, yy);
}


/// CUSTOM ITEMS
var array   = arrayOfHighCourtCustomItemValues;
var size    = array_height_2d(array);
var maxItem = min(size, 15); // 15 being the amount we can show on screen at once.

for (var i=0; i&lt;maxItem; i++)
{
    var yy          = (customListStartY + (i*rowHeight));
    var desc        = array[i,0];
    var outlayVal   = array[i,1];
    var profesVal   = array[i,2];
    
    draw_set_halign(fa_left);
    draw_text(descriptionTextX,  yy, desc);
    draw_set_halign(fa_right);
    draw_text(newValueTextX,     yy, outlayVal);
    draw_text(defaultValueTextX, yy, profesVal);
    
    // draw row
    draw_line(windowX1, yy, windowX2, yy);
}


// draw content
draw_set_halign(fa_left);


reset_text();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
