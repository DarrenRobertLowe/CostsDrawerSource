<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CONSTANT_ITEM</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

master = -1;
countMyItemNumber = true;
hasNoFee = true;

row = (lastPage_WITNESSES.row + lastPage_WITNESSES.lines);

outlayRequired      = true;
canDelete           = true;
hasOutlay           = true;
hasProfessional     = false;
hasDescription      = true;
countMyItemNumber   = true;
descriptionList     = ds_list_create(); // used to hold each line of an item description text.
description         = "";
exampleList         = ds_list_create(); // used to formate the default description hint

exampleLine         = "Expenses attending ., Court for hearing (add as claimed)";
formatDescription(exampleList,exampleLine,false);

shownDescription    = description;
formatDescription(descriptionList,description,false);
formatDescription(shownDescriptionList,shownDescription,false);


lines               = 3;
italics             = global.italicsMultiplier;
interval            = (room_speed * 1);


alarm[0] = 1;  // essentially the create event

// de-globalize
textMargin = global.textMargin;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pos = ds_list_find_index(global.LAST_PAGE_ITEMS,id);
ds_list_delete(global.LAST_PAGE_ITEMS,pos);

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CREATE EVENT

// POSITION US ON THE LIST
/* We know our WITNESS.
 * There could be any number of witness fees before us, or we could be the first,
 *   so we need to check if there's a FEE before us.
 * If there's a fee before us, we find it on the LAST_PAGE_ITEMS list and position
 *   ourselves after it.
 * If there's no fee before us, we find the position of our WITNESS and position
 *   ourselves after that instead.
*/

master  = find_ID(masterID);            // set master = instance number
feeList = master.feeList;
ds_list_add(feeList,id)                 // add us to the master's fee list

blockParent = master;
master.blockHasChild = true;

blockList = master.blockChildList;      // add us to the master's block so we move when they do.
ds_list_add(blockList,id);



//show_message("masterID = " +string(masterID));
//show_message("master = " +string(master));


var pos = ds_list_find_index(feeList,id);

if (pos == -1) {}
else
{
    var ind = -1;
    
    if ( ds_list_size(master.feeList) == 1 ) // there's only one fee...
    {
        if (ds_list_find_value(master.feeList,0) == id)
        {
            // if we're the first fee for this item...
            ind = ds_list_find_index(global.LAST_PAGE_ITEMS,master); // find the master
            
            global.selected = master;
        }
    }
    else // there are multiple fees...
    {
        var preFee = ds_list_find_value( master.feeList, ds_list_size(master.feeList)-2 );
        ind = ds_list_find_index(global.LAST_PAGE_ITEMS,preFee);
        
        global.selected = id;
    }
    
    ds_list_insert( global.LAST_PAGE_ITEMS, ind+1, id );
    selectedField   = "description";
    
    //DOC_ORGANIZER.startFrom = master.id;
    //DOC_ORGANIZER.alarm[0]  = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Border
//borderStartY = getYFromRow(row+1);
//borderEndY   = getYFromRow(row+1+lines);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// HIGHLIGHT

if   (master &gt; -1) 
and  !(instance_exists(master))
  then instance_destroy(id,true);
 
else
{
    if (in_view())
    {
        mouseOverChecks();
        reset_text();
        
        textPosY        = getYFromRow(row+1);
        textPosX        = global.descriptionColumnX;
        rowHeight       = global.rowHeight;
        textMargin      = global.textMargin;
        
        descriptionX    = (textMargin + global.descriptionColumnX);
        

        
        
        // SETUP QUANTUM //
        var descSize = (ds_list_size(descriptionList)-1);
        if (ds_list_size(descriptionList) == 0) then descSize = 1;
        quantumPositionY = (textPosY + (descSize * rowHeight));
        
        
        
        // DRAW Outlay
        if (editingOutlay == false)
        {
            draw_set_halign(fa_right);                      // align the font to the right for quantum.
            if (outlay == 0)
            {
                draw_set_color(global.grayText);
                if (global.PRINT_VIEW == true) then draw_set_color(c_black);
                draw_text
                (
                    (global.fColumnX),                      // x position (right side of the column)
                    quantumPositionY,                       // y position
                    "0.00"                                  // "0.00"
                );
            }
            else
            {
                draw_set_color(global.quantumTextColor);
                if (global.PRINT_VIEW == true) then draw_set_color(c_black);
                draw_text
                (
                    global.fColumnX,                        // x position (right side of the column)
                    quantumPositionY,                       // y position
                    outlayText                              // outlay amount
                );  
            }
        }
        
        
        
        // DRAW Description
        if (editingDescription == false)
        {
            reset_text();
            draw_set_halign(fa_left);
            
            if (description = "")
            {
                draw_set_color(global.grayText);
                
                for(i=0; i&lt;ds_list_size(exampleList); i+=1)                 // go line by line through description
                {
                    draw_text                                               // draw_text(...
                    (
                        textPosX,                                           // x,
                        textPosY + (i*rowHeight),                           // y,
                        ds_list_find_value(exampleList,i)                   // "string" )
                    );
                }
            }
            
            else 
            {
                draw_set_colour(global.itemTextColor);
                
                for(i=0; i&lt;ds_list_size(descriptionList); i+=1)             // go line by line through description
                {
                    draw_text                                              // draw_text(...
                    (
                        textPosX,                                           // x,
                        textPosY + (i*rowHeight),                           // y,
                        ds_list_find_value(descriptionList,i)               // "string" )
                    );
                }
            }
        }
        
        
        
        /// ADD EXPENSE BUTTON
        // check if we're the last witness fee for this witness
        if (global.PRINT_VIEW == 0)
        {
            if (master &gt; -1)
            {
                var feeListSize = ds_list_size(master.feeList);
                var item        = ds_list_find_value(master.feeList,feeListSize-1);
                
                if (item == id) // if we are the last fee...
                {
                    var size = ds_list_size(descriptionList)
                    
                    if (size &gt; 0) // and we have data entered, then show the Add Witness Expense button...
                    {
                        draw_set_color(global.highlightColor);
                        draw_text(textPosX,textPosY + (size * rowHeight),"             + Add Expense +");
                        
                        
                        // LEFT CLICK
                        if  (mouseOverAddExpense())
                        and (global.menuSelected == 0)              // used to prevent selecting item while File Menu is open. Doesn't work though...  
                        {
                            drawBorder("Add Expense");
                            
                            if (mouse_check_button_released(mb_left))
                            {
                                if ( SCROLLBAR_H.scrollbarShown and SCROLLBAR_H.mouseOver) then exit;
                                if mouseOverGuiTop()    then exit;
                                if mouseOverGuiFooter() then exit;
                                
                                // CREATE FEE ITEM
                                master.myFee    = -1;   // needed to allow another fee to be created
                                master.alarm[1] = 1;    // tells master to create a fee
                            }
                        }
                    }
                }
                
                
                // DELETE BUTTON
                var thisIndex     = ds_list_find_index(master.feeList,id);
                
                if (thisIndex &gt; 0)          // if we're not the first fee...
                  then canDelete = true;
                  else canDelete = false;
            }
        }
        
        var descSize = max(1,ds_list_size(descriptionList));
        if (descSize = 0) then descSize = 2;
        
        borderStartY = (textPosY - rowHeight);
        borderEndY   = (borderStartY + (rowHeight * descSize ));
        
        
        if (global.selected = id)
        {
            // HIGHLIGHT THE ITEM //
            drawBorder("Witness Fee");
            edit_description(textPosY);
            edit_outlay();
        }
    }
}

if (editingDescription == false)
{
    if (description = "")
      then lines = ds_list_size(exampleList)
      else lines = ds_list_size(shownDescriptionList);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
