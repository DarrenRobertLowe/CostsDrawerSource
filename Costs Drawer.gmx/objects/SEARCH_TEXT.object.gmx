<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2099</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>targetWidth = 142;
height      = 20;
old_xview   = 0;
old_yview   = 0;
old_guiScale = global.GUI_SCALE;

/// initialize
initX   = 180;
initY   = 4;
x1      = x;
y1      = 4;
x2      = (x1 + targetWidth);
y2      = (y1 + height);
sprW    = 16;
width   = (x2 - x1);

x = (view_xview[0] + initX);
y = (view_yview[0] + initY);

x1      = x;
y1      = y;
x2      = (x1 + width);
y2      = (y1 + height);
textX   = (x1 + 4);
textY   = (y1 + height);
sprX    = (x1 - sprW);      // make room for the sprite

guiX1  = (x - view_xview[0]);
guiY1  = (y - view_yview[0]);
guiX2  = (guiX1 + width);
guiY2  = (guiY1 + height);


searchString  = "";
trimmedString = trim_text(searchString,width);
oldString     = "";
searchResults = ds_list_create();
searchIndex   = -1;
highlight     = false;


old_right_column_x = global.right_column_x;

highlightX1 = -1;
highlightX2 = -1;
highlightY1 = -1;
highlightY2 = -1;

var buttonStartX = (x2 + 2);
btn1 = instance_create(buttonStartX, 6, button_search_prev);
btn2 = instance_create(buttonStartX + 20, 6, button_search_next);

if !(instance_exists(SEARCH_HIGHLIGHTER)) then instance_create(0,0,SEARCH_HIGHLIGHTER);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// clean up

if ds_exists(searchResults,ds_type_list) then ds_list_destroy(searchResults);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// FIND POSITION and SHOULD WE HIGHLIGHT?
if rowIsVisible(getRowFromY(highlightY1))
or rowIsVisible(getRowFromY(highlightY2))
then highlight = true;
else highlight = false;


// FIND POSITION
if (view_xview[0] != old_xview)
or (view_yview[0] != old_yview)
or (global.right_column_x != old_right_column_x)
or (global.GUI_SCALE != old_guiScale)
{
    x = (view_xview[0] + initX); 
    y = (view_yview[0] + initY);
    
    x += (global.GUI_SCALE * 30);
    
    x1      = x;
    y1      = y;
    x2      = (x1 + targetWidth);
    x2alt   = (view_xview[0] + (global.right_column_x - 45));
    x2      = min(x2, x2alt);
    width   = (x2 - x1);
    y2      = (y1 + height);
    textX   = (x1 + 4);
    textY   = (y1 + height);
    sprX    = (x1 - sprW);              // make room for the sprite
    
    guiX1   = (x - view_xview[0]);      // clickable area requires gui co-ords
    guiY1   = (y - view_yview[0]);
    guiX2   = (guiX1 + width);
    guiY2   = (guiY1 + height);
    
    
    btn1.x      = (x2 + 2);
    btn2.x      = (x2 + 22);
    btn1.guiX   = (x2 + 2  - view_xview[0]);
    btn2.guiX   = (x2 + 22 - view_xview[0]);
    
    old_xview = view_xview[0];
    old_yview = view_yview[0];
    old_right_column_x = global.right_column_x;
    old_guiScale = global.GUI_SCALE;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Nullify highlight position

ds_list_clear(searchResults);
searchIndex = -1;

highlightX1 = -1;
highlightX2 = -1;
highlightY1 = -1;
highlightY2 = -1;

highlight = 0;

searchString  = "";
trimmedString = "";
oldString     = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW SEARCH BAR and CLICK
draw_set_font(font_GUI);
draw_set_halign(fa_left);
draw_set_valign(fa_bottom);


// draw background (white)
draw_set_color(c_white);
draw_rectangle(sprX, y1, x2, y2, false);

// draw borders (gray)
draw_set_color(c_dkgray);
draw_rectangle(sprX, y1, x2, y2, true);

// draw sprite
draw_sprite(spr_search, 0, sprX, y);

// draw text
draw_set_color(c_black);
draw_text(textX, textY, trimmedString);





if  (global.MOUSE_FREE == true)
and (global.menuSelected == 0)
and (mouseOverArea(guiX1, guiY1, guiX2, guiY2))
{
    //highlightButton();
    tooltip("Search items for text...");
    
    // MOUSE CLICK
    if (mouse_check_button_pressed(mb_left))
    {
        global.selected = -1;
        
        searchString  = get_string("Search for text...",searchString);
        trimmedString = trim_text(searchString,width);
        
        if (searchString == "") then event_user(0);
        
        search_item_text(1);
    }
}
else image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
