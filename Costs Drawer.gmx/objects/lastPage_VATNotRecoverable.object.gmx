<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CONSTANT_ITEM</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

hasDate             = false;
countMyItemNumber   = false;
canDelete           = true;
editing             = false;
hasDescription      = false;
hasOutlay           = false;
hasProfessional     = false;
hasYear             = false;
hasMonth            = false;
hasDay              = false;


description = "We certify that the V.A.T. claimed in this Bill of Costs, is not otherwise recoverable";
shownDescription = description;

formatDescription(descriptionList,description,false);
formatDescription(shownDescriptionList,shownDescription,false);
//line1 = ""; // for some reason XLSX exporting makes the first line blank, so ... 
//line2 = "We certify that the V.A.T claimed";
//line3 = "  in this Bill of Costs, is not otherwise";
//line4 = "  recoverable";



row = (GENERAL_INSTRUCTIONS_FEE.row + GENERAL_INSTRUCTIONS_FEE.lines);

// set target item to position ourselves after (reverse preference)
targetItem = INSTRUCTIONS_FEE_TOTAL;
if instance_exists(lastPage_DatedSignature)  then targetItem = lastPage_DatedSignature;
if instance_exists(lastPage_Address)         then targetItem = lastPage_Address;


// POSITION US ON THE LIST
var list = global.LAST_PAGE_ITEMS;
var size = ds_list_size(global.LAST_PAGE_ITEMS);

for(var i=(size-1); i&gt;=0; i--)
{
    var item = ds_list_find_value(list,i);

    if (item.object_index == targetItem)
    {
        row = (item.row + item.lines);
        ds_list_insert(list,i+1,id);
        break;
    }
}



lines = 5; // doesn't change


var pages = (global.totalRows / global.rowsPerPage);
row = (pages*global.totalRows)+3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// FIND ROW and DRAW DATA
if in_view()
{
    //row = (lastPage_TOTAL.row + lastPage_TOTAL.lines)+1;
    
    // setup the text 
    reset_text();
    
    /// draw the address
    var textPosX = (global.descriptionColumnX + global.textMargin);
    var textPosY = getYFromRow(row+1);                                  // +1 because text is drawn from bottom up and getYFromRow returns row -1. Don't know why, but it seems to be needed.
    
    for(i=0; i&lt;ds_list_size(shownDescriptionList); i++)                 // go line by line through description
    {
        draw_text
        (                                                   // draw_text(...
            global.descriptionColumnX,                      // x,
            textPosY + (i*global.rowHeight),                       // y,
            ds_list_find_value(shownDescriptionList,i)      // "string" )
        );
    }
    //draw_text(textPosX,textPosY,line1);
    //draw_text(textPosX,textPosY+global.rowHeight,       line2);
    //draw_text(textPosX,textPosY+(global.rowHeight*2),   line3);
    //draw_text(textPosX,textPosY+(global.rowHeight*3),   line4);
    
    mouseOverChecks();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
