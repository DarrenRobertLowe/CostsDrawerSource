<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CONSTANT_ITEM</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INITIALIZE
event_inherited();
countMyItemNumber   = false;
hasNoFee            = true;
hasDate             = false;
hasYear             = false;
hasMonth            = false;
hasDay              = false;
instructionsFee     = false;
countMyItemNumber   = false;
hasDescription      = true;

description         = "";
shownDescription    = description;

formatDescription(descriptionList,description,false);
formatDescription(shownDescriptionList,shownDescription,false);


lines               = ds_list_size(descriptionList);
italics             = global.italicsMultiplier;

andOthers           = false;



// Add us to plaintiffs
var list = global.PLAINTIFFS;
ds_list_add(list,id);

// Add us to listOfItems
var size = ds_list_size(list);
var lastPlaintiff = ds_list_find_value(list,size-2)                             // get the plaintiff id
show_debug_message("lastPlaintiff is " +string(lastPlaintiff));

pos = ds_list_find_index(global.listOfItems,lastPlaintiff);                     // find that id on listOfItems
show_debug_message("lastPlaintiff position is " +string(pos));

if (pos &gt; -1)                                                                   // if we're NOT the first plaintiff...
{
    ds_list_insert(global.listOfItems,pos+1,id);                                // add us after the last plaintiff.
    show_debug_message("I'm not the first plaintiff, so adding myself after the last plaintiff");
}
else                                                                            // but if we ARE the first plaintiff...
{
    show_debug_message("I AM the first plaintiff, so adding myself after firstPage_Plaintiffs");
    var ind = ds_list_find_index(global.listOfItems,firstPage_Plaintiffs.id);   // find firstPage_Plaintiffs on the list...
    
    if (ind &gt; -1)
    {
        ds_list_insert(global.listOfItems,ind+1,id);                            // add use after it.
    }
}


alarm[0] = 1;

/// find row
/*
var ind      = ds_list_find_index(global.listOfItems,id);
var prevItem = ds_list_find_value(global.listOfItems,ind-1);

if ( exists(prevItem) )
{
    show_debug_message("prevItem exists.");
    
    if (prevItem.object_index == firstPage_record_number)
    {
        row = (prevItem.row + 1);
    }
    else
    {
        row = ((prevItem.row + prevItem.lines) +1); // +1 for AND
        show_debug_message("prevItem = " +string(prevItem));
    }
    
}
else show_message("PLAINTIFF says prevItem doesn't exist");
*/


// de-globalize
textMargin = global.textMargin;

// Styles
xlsx_styleID = 4;               // bold
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// find row

show_debug_message("*** ALARM 0 HAS STARTED **** I am "+string(id));

var ind      = ds_list_find_index(global.listOfItems,id);
show_debug_message("My index is " +string(ind));

var prevItem = ds_list_find_value(global.listOfItems,ind-1);
show_debug_message("so prevItem object index is " +string(object_get_name(prevItem.object_index)));





if ( exists(prevItem) )
{
    show_debug_message("prevItem exists.");
    
    if (prevItem.object_index == firstPage_record_number)
    {
        row = (prevItem.row + 2);
    }
    else
    {
        row = ( (prevItem.row + prevItem.lines) +1); // +1 for AND
        show_debug_message("prevItem = " +string(prevItem));
    }
}
else show_message("PLAINTIFF says prevItem doesn't exist");



/*

/// find row
var ind      = ds_list_find_index(global.listOfItems,id);
var prevItem = ds_list_find_value(global.listOfItems,ind-1);

if ( exists(prevItem) )
{
    show_debug_message("prevItem exists.");
    
    if (prevItem.object_index == firstPage_record_number)
    {
        row = (prevItem.row + 1);
    }
    else
    {
        row = ((prevItem.row + prevItem.lines) +1); // +1 for AND
        show_debug_message("prevItem = " +string(prevItem));
    }
    
}
else show_message("PLAINTIFF says prevItem doesn't exist");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw DATA and EDIT

if ( in_view() )
{
    //mouseOverChecks();
    reset_text();
    draw_set_font_scaled(font_TimesBold);
    
    
    /// DRAW NAME (nameList)
    var textPosX    = global.descriptionColumnX;
    
    var textPosY    = getYFromRow(row+1);
    var size        = ds_list_size(descriptionList);
    var rowHeight   = global.rowHeight;

    var ind = ds_list_find_index(global.PLAINTIFFS,id);
    
    var plaintiffSize = ds_list_size(global.PLAINTIFFS);
    
    
    //if we're not the first plaintiff
    if (ind &gt; 0)
    {
        draw_text(textPosX, textPosY, "AND");
        textPosY += rowHeight; //add a line for "AND"
    }
    
    
    // DRAW DESCRIPTION
    if (description == "") or (description == " ")
    {
        draw_set_color(global.grayText);
        draw_text(textPosX,textPosY,"Enter Plaintiff Name");
    }
    else
    {
        for(var i=0; i&lt;size; i++)   // n because is goes after the name and we don't know how long that is.
        {
            var value = ds_list_find_value(descriptionList,i);
            draw_set_color(global.itemTextColor);
            draw_text(textPosX, textPosY + (i*rowHeight), string_upper(value));
        }
    }
    
    var size = max(1,ds_list_size(descriptionList));
    textPosY += ( size * rowHeight );
    
    
    
    // MOUSE OVER DESCRIPTION
    if (ind == 0)
    {
        if ( mouseOverDescription() )
        {
            drawBorder("description");
            
            if ( mouse_check_button_released(mb_left) )
            {
                global.selected = id;
                selectedField = "description";
                keyboard_CURSOR.field = 5;
                cursor_update_borders();
                getDescription();
            }
        }
    }
    else
    {
        if ( mouseOverPlaintiffName() )
        {
            drawBorder("plaintiff name");
            
            if ( mouse_check_button_released(mb_left) )
            {
                global.selected = id;
                selectedField = "description";
                keyboard_CURSOR.field = 5;
                cursor_update_borders();
                getDescription();
            }
        }
    }
    
    if (andOthers == true)
    {
        draw_set_color(global.itemTextColor);
        draw_text(textPosX, textPosY + (size*rowHeight), "AND OTHERS");
    }
    
    
    /// "Add New Plaintiff" button
    // if we're the last plaintiff...
    if (ind == (plaintiffSize-1) )
    or (ind == 0 and (plaintiffSize &lt;= 1) )
    {
        if  ( ind &lt; global.maxPlaintiffs )
        and (andOthers == false)
        {
            // draw the button text...
            draw_set_color(global.highlightColor);
            draw_text(textPosX, textPosY, "++ Add New Plaintiff ++");
            
            // mouseOver()..
            var x1 = global.descriptionColumnX;
            var x2 = global.outlayColumnX;
            var y1 = (textPosY - rowHeight);
            var y2 = textPosY;
            
            
            if ( mouseOverArea(x1,y1,x2,y2) ) // same code
            {
                //show_debug_message(string(current_time) + " mouse is over Add Plaintiff");
                
                if (ind == 0)
                  then drawBorder("Add Plaintiff 1");
                  else drawBorder("Add Plaintiff 2");
                
                // on click, create a new Plaintiff.
                if ( mouse_check_button_released(mb_left) )
                {
                    if ( ind+1 &lt; global.maxPlaintiffs )
                    {
                        instance_create(x,y,PLAINTIFF);
                    }
                    else
                    {
                        andOthers = true;
                    }
                }
            }
        }
    }
    
    
    
    
    
    // EDIT
    if (global.selected = id)
    {
        reset_text();
        
        // HIGHLIGHT THE ITEM //
        drawBorder("item");
        
        edit_description(textPosY - rowHeight);
    }
    
    
    lines = ds_list_size(descriptionList); /// + 2 for AND
    if (ind &gt; 0) then lines += 1;
    
    ds_list_copy(shownDescriptionList,descriptionList);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
