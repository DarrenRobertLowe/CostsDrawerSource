<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CONSTANT_ITEM</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INITIALIZE
/* SEE ALSO: firstPage_Defendants*/
event_inherited();
countMyItemNumber   = false;
hasNoFee            = true;
hasDate             = false;
hasYear             = false;
hasMonth            = false;
hasDay              = false;
instructionsFee     = false;
countMyItemNumber   = false;
hasDescription      = true;
canDelete           = true;


description         = " ";
shownDescription    = description;

ds_list_clear(descriptionList);
ds_list_clear(shownDescriptionList);

formatDescription(descriptionList,description,false);
formatDescription(shownDescriptionList,shownDescription,false);


lines               = ds_list_size(descriptionList);
italics             = global.italicsMultiplier;

andOthers           = false;
andOthersText       = "AND OTHERS"
showingAndText      = false;
andText             = "and";



// Add us to global.defendants
var list = global.DEFENDANTS;
ds_list_add(list,id);


// Add us to global.listOfItems
var size = ds_list_size(list);
var lastDefendant = ds_list_find_value(list,size-2)                             // get the defendant id
//show_debug_message(string(id) +"says lastDefendant is " +string(lastDefendant));

pos = ds_list_find_index(global.listOfItems,lastDefendant);                     // find that id on listOfItems
//show_debug_message(string(id) +"says lastDefendant pos is " +string(pos));

if (pos &gt; -1)                                                                   // if we're NOT the first defendant...
{
    ds_list_insert(global.listOfItems,pos+1,id);                                // add us after the last defendant.
}
else                                                                            // but if we ARE the first defendant...
{
    //show_debug_message("I AM the first defendant, so adding myself after firstPage_Plaintiffs");
    var ind = ds_list_find_index(global.listOfItems,firstPage_Plaintiffs.id);   // find firstPage_Defendants on the list...
    
    if (ind &gt; -1)
    {
        ds_list_insert(global.listOfItems,ind+1,id);                            // add us before it.
    }
}


// create event
event_user(0);
interval = 5;
alarm[1] = interval;
alarm[9] = 2; // startup confirm description

// de-globalize
textMargin = global.textMargin;

// Styles
xlsx_styleID = 4;               // bold

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

var list = global.DEFENDANTS;
var pos = ds_list_find_index(list,id);

if (pos &gt; -1)
{
    ds_list_delete(list,pos);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Startup confirm description
// because otherwise "Defendants" ends up on wrong line
confirmDescription(description);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// re-run find row
event_user(0);

alarm[1] = interval;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>formatDescription(descriptionList,description,false); // confirm description so that it gets formatted to multi-lines
lines = ds_list_size(descriptionList + showingAndText);// i.e. +1 row if true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check if we should exist
if  (ds_list_find_index(global.DEFENDANTS,id) == -1)
then instance_destroy(id,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// find row

var ind      = ds_list_find_index(global.listOfItems,id);
var prevItem = ds_list_find_value(global.listOfItems,ind-1);


if ( exists(prevItem) )
{
    /*if (prevItem.object_index == firstPage_Plaintiffs)
    {
        row = ( (prevItem.row + prevItem.lines));
    }  
    else
    {*/
        row = ( (prevItem.row + prevItem.lines));
    //}
    //show_debug_message("prevItem = " +string(prevItem) +" " +string(object_get_name(prevItem.object_index)));
}
else show_debug_message("DEFENDANT says prevItem doesn't exist");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw DATA and EDIT
rowHeight = global.rowHeight;

if ( in_view() )
{
    // delete button
    var list = global.DEFENDANTS;
    var pos = ds_list_find_index(list,id);
    if (pos &gt; 0)
      then canDelete = true;
      else canDelete = false;
    
    if  (canDelete == true)
    and (global.PRINT_VIEW == false)
    {
        var binY = ((borderStartY + global.rowHeight) + 4);
        draw_sprite(spr_bin, 0, global.hColumnX + 8, binY);
        
        if ( mouseOverDocument() )
        {
            var x1 = (global.hColumnX);
            var y1 = (borderStartY + global.rowHeight);
            var x2 = (global.hColumnX + 32);
            var y2 = (borderStartY + (global.rowHeight*2));
            
            if (mouseOverAreaAlt(x1,y1,x2,y2))
            {
                highlightButtonArea(x1, y1, x2, y2);
                draw_sprite(spr_bin,0, x1 + 8, binY );
                drawBorder("plaintiff name");
                
                if mouse_check_button_pressed(mb_left)
                {
                    if show_question("Delete defendant? WARNING: This action cannot be undone!")
                    {
                        delete_item(id);
                        set_unsaved();
                    }
                }
            }
        }
    }
    
    reset_text();
    draw_set_font_scaled(font_TimesBold);
    
    
    /// DRAW NAME (nameList)
    var textPosX    = global.descriptionColumnX;
    
    var textPosY    = getYFromRow(row+1);
    var size        = ds_list_size(descriptionList);
    //var rowHeight   = global.rowHeight;

    var ind = ds_list_find_index(global.DEFENDANTS,id);
    
    var defendantsSize = ds_list_size(global.DEFENDANTS);
    
    
    //if we're not the first defendant draw "and" first
    if (ind &gt; 0)
    {
        draw_text(textPosX, textPosY, andText);
        showingAndText = true;
        textPosY += rowHeight; //add a line for "and"
    }
    
    
    // DRAW DESCRIPTION
    var size        = ds_list_size(descriptionList);
    
    if (remove_spaces(description) == "")//if (description == "") or (description == " ")
    {
        draw_set_color(global.grayText);
        if (global.PRINT_VIEW == false) then draw_text(textPosX,textPosY,"Enter Defendant Name");
    }
    else
    {
        for(var i=0; i&lt;size; i++)   // n because is goes after the name and we don't know how long that is.
        {
            var value = ds_list_find_value(descriptionList,i);
            draw_set_color(global.itemTextColor);
            draw_text(textPosX, textPosY + (i*rowHeight), string_upper(value));
        }
    }
    
    var size = max(1,ds_list_size(descriptionList));
    textPosY += ( size * rowHeight );
    
    
    
    // MOUSE OVER DESCRIPTION
    if (ind == 0)
    {
        if ( mouseOverDescription() )
        {
            drawBorder("description");
            
            if ( mouse_check_button_released(mb_left) )
            {
                global.selected = id;
                selectedField = "description";
                keyboard_CURSOR.field = 5;
                cursor_update_borders();
                getDescription();
            }
        }
    }
    else
    {
        if ( mouseOverPlaintiffName() )
        {
            drawBorder("plaintiff name");
            
            if ( mouse_check_button_released(mb_left) )
            {
                global.selected = id;
                selectedField = "plaintiff2";
                keyboard_CURSOR.field = 5;
                cursor_update_borders();
                getDescription();
            }
        }
    }
    
    if (andOthers == true)
    {
        draw_set_color(global.itemTextColor);
        draw_text(textPosX, textPosY + rowHeight, andOthersText);
        
        // delete button for "and others"
        if (global.PRINT_VIEW == false)
        {
            var binY = ( (borderStartY+4) + (global.rowHeight*(lines + 2)) );
            draw_sprite(spr_bin, 0, global.hColumnX + 8, binY);
            
            if ( mouseOverDocument() )
            {
                var x1 = (global.hColumnX);
                var y1 = (binY - 4);
                var x2 = (global.hColumnX + 32);
                var y2 = (y1 + (global.rowHeight));
                
                if (mouseOverAreaAlt(x1,y1,x2,y2))
                {
                    highlightButtonArea(x1, y1, x2, y2);
                    draw_sprite(spr_bin, 0, x1 + 8, binY );
                    drawBorder("and others");
                    
                    if mouse_check_button_pressed(mb_left)
                    {
                        if show_question("Delete defendant : 'AND OTHERS'?")
                        {
                            andOthers = false;
                            set_unsaved();
                        }
                    }
                }
            }
        }
    }
    
    
    /// "Add New Defendant" button
    // if we're the last defendant...
    if (global.PRINT_VIEW == false)
    {
    if (ind == (defendantsSize-1) )
    or (ind == 0 and (defendantsSize &lt;= 1) )
    {
        if  ( ind &lt; global.maxDefendants )
        and (andOthers == false)
        {
            // draw the button text...
            draw_set_color(global.highlightColor);
            draw_text(textPosX, textPosY, "++ Add New Defendant ++");
            
            // mouseOver()..
            var x1 = global.descriptionColumnX;
            var x2 = global.outlayColumnX;
            var y1 = (textPosY - rowHeight);
            var y2 = textPosY;
            
            
            if ( mouseOverDocumentArea(x1,y1,x2,y2) ) // same code
            {
                //show_debug_message(string(current_time) + " mouse is over Add Defendant");
                    
                    if (ind == 0)
                      then drawBorder("Add Plaintiff 1"); // "Plaintiff" because it's the same result
                      else drawBorder("Add Plaintiff 2");
                    
                    // on click, create a new Defendant.
                    if ( mouse_check_button_released(mb_left) )
                    {
                        if ( ind+1 &lt; global.maxDefendants )
                        {
                            instance_create(x,y,DEFENDANT);
                        }
                        else
                        {
                            andOthers = true;
                        }
                    }
                }
            }
        }
    }
    
    
    
    
    // EDIT
    if (global.selected = id)
    {
        reset_text();
        
        // HIGHLIGHT THE ITEM //
        //show_debug_message("pos = "+string(pos));
        if (pos == 0)
          then drawBorder("item");
          else drawBorder("plaintiff 2");
        
        edit_description(textPosY - rowHeight);
    }
    
    
    
    //if (ind &gt; 0) then lines += 1;
    
    //ds_list_copy(shownDescriptionList,descriptionList);
}

//lines = ds_list_size(descriptionList + showingAndText);// i.e. +1 row if true
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
