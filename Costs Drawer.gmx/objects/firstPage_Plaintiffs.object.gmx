<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>CONSTANT_ITEM</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
hasDate             = 0;
countMyItemNumber   = 0;
lines               = 4;
italics             = global.italicsMultiplier;
plaintiffs          = ds_list_create();
drawnPlaintiffs     = ds_list_create();
andText             = "and ";
moveable            = false;
plaintiffString     = "                                    Plaintiff";

ds_list_clear(descriptionList);
ds_list_add(descriptionList," ");
ds_list_add(descriptionList,"AND");
ds_list_add(descriptionList," ");

event_user(0); /// Create the first Plaintiff
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// do nothing.
// needed for preventing description from disappearing
// due to shownDescription not existing.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create the first Plaintiff
instance_create(x,y,PLAINTIFF);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw and find row

if ( in_view() )
{
    reset_text();
    textPosY     = getYFromRow(row+1);                           // +1 because text is drawn from bottom up and getYFromRow returns row -1. Don't know why, but it seems to be needed.
    //var size     = 0;
    //var listSize = ds_list_size(plaintiffs);
    //var maxWidth = global.descriptionTextWidth;
    //var scale    = global.scale;
    
    
    // Pluralize
    if (ds_list_size(global.PLAINTIFFS) &gt; 1)
      then plaintiffString = "                                    Plaintiffs";
      else plaintiffString = "                                    Plaintiff";
    
    // draw PLAINTIFFS text
    draw_text
    (
        global.textMargin + global.descriptionColumnX,  // x,
        textPosY,
        plaintiffString
    );
    
    
    
    draw_set_font_scaled(font_TimesBold);
    
    draw_text( // blank space
        global.textMargin + global.descriptionColumnX,                                             // x,
        textPosY + (global.rowHeight),                  // y,
        ds_list_find_value(descriptionList,0),          // string)
    )
    
    draw_text( // "AND"
        global.textMargin + global.descriptionColumnX,  // x,
        textPosY+(global.rowHeight*2),                  // y,
        ds_list_find_value(descriptionList,1),          // string)
    )
    draw_text( // blank space
        global.textMargin + global.descriptionColumnX,                                             // x,
        textPosY+(global.rowHeight*3),                  // y,
        ds_list_find_value(descriptionList,2),          // string)
    )
    
    
    
    
    /// find row
    var lastPlaintiff = ds_list_find_value(global.PLAINTIFFS, ds_list_size(global.PLAINTIFFS)-1);
    
    if ( exists(lastPlaintiff) )
    {
        row = (lastPlaintiff.row + ds_list_size(lastPlaintiff.descriptionList) + lastPlaintiff.showingAndText + 1 + (lastPlaintiff.andOthers));
    }
    else
    {
        row = (firstPage_record_number.row + 5); // make room for the region info.
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
